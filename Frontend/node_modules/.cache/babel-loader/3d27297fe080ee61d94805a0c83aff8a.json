{"ast":null,"code":"var _jsxFileName = \"/Users/thunderchawla/Documents/GitHub/webapp/client/src/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Login } from \"./Login\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignUp() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  let navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const error = document.getElementById(\"error\");\n\n  const handleSubmit = () => {\n    // e.preventDefault();\n    if (password === confirmPassword) {\n      axios.post(\"http://localhost:3001/create/\", {\n        name: name,\n        email: email,\n        password: password\n      }).then(res => {\n        console.log(res);\n\n        if (res.data === \"User already exists\") {\n          alert(\"User already exists, please login\");\n          return navigate(\"/Login?email=\" + email);\n        } else {\n          alert(\"User created successfully\");\n          return navigate(\"/Login?email=\" + email);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      alert(\"Passwords do not match\");\n    }\n  };\n\n  function setBorderColor(target, focusIn) {\n    if (focusIn) {\n      target.style.borderColor = \"black\";\n      error.innerHTML = \"\";\n    } else {\n      if (password === confirmPassword) {\n        target.style.borderColor = \"green\";\n        error.style.color = \"green\";\n        error.innerHTML = \"Passwords match\";\n      } else {\n        target.style.borderColor = \"red\";\n        error.style.color = \"red\";\n        error.innerHTML = \"Passwords do not match\";\n      }\n    }\n  }\n\n  const If = props => {\n    const condition = props.condition || false;\n    const positive = props.then || null;\n    const negative = props.else || null;\n    return condition ? positive : negative;\n  };\n\n  let errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }, this);\n  };\n\n  let noerror = () => {\n    return null;\n  };\n\n  return (\n    /*#__PURE__*/\n    //Interactive Signup form, ask for one parameter at a time and then submit\n    _jsxDEV(\"div\", {\n      className: \"SignUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Input-Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'text',\n            placeholder: 'Enter your name',\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'text',\n            placeholder: 'Enter your email',\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: 'a',\n            type: 'text',\n            placeholder: 'Enter your username',\n            onChange: event => setUsername(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), username == \"a\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username must be at least 2 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 40\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'password',\n            placeholder: 'Enter your password',\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'password',\n            placeholder: 'Enter your password',\n            onChange: event => setConfirmPassword(event.target.value),\n            onFocus: event => setBorderColor(event.target, true),\n            onBlur: event => setBorderColor(event.target, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: 'error',\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(SignUp, \"6MzcHunfBVgzAfj5PcXRaLggtbA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["axios","useState","Login","Route","Routes","Home","useNavigate","SignUp","name","setName","username","setUsername","email","setEmail","navigate","password","setPassword","confirmPassword","setConfirmPassword","error","document","getElementById","handleSubmit","post","then","res","console","log","data","alert","catch","err","setBorderColor","target","focusIn","style","borderColor","innerHTML","color","If","props","condition","positive","negative","else","errorMessage","noerror","event","value"],"sources":["/Users/thunderchawla/Documents/GitHub/webapp/client/src/SignUp.js"],"sourcesContent":["import axios from \"axios\";\nimport {useState} from \"react\";\nimport {Login} from \"./Login\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Home} from \"./Home\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport function SignUp() {\n    const [name, setName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    let navigate = useNavigate();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const error = document.getElementById(\"error\");    \n\n    const handleSubmit = () => {\n        // e.preventDefault();\n        if(password === confirmPassword) {\n            axios.post(\"http://localhost:3001/create/\", {\n                name: name,\n                email: email,\n                password: password\n            }).then(res => {\n                console.log(res);\n                if (res.data === \"User already exists\") {\n                    alert(\"User already exists, please login\");\n                    return navigate(\"/Login?email=\" + email);\n                }\n                else {\n                    alert(\"User created successfully\");\n                    return navigate(\"/Login?email=\" + email);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n        else {\n            alert(\"Passwords do not match\");\n        }\n    };\n\n    function setBorderColor(target, focusIn) {\n        if(focusIn) {\n            target.style.borderColor = \"black\";\n            error.innerHTML = \"\";\n        }\n        else {\n            if(password === confirmPassword) {\n                target.style.borderColor = \"green\";\n                error.style.color = \"green\";\n                error.innerHTML = \"Passwords match\";\n            }\n            else {\n                target.style.borderColor = \"red\";\n                error.style.color = \"red\";\n                error.innerHTML = \"Passwords do not match\";\n            }\n        }\n    }\n\n\n\n    const If = (props) => {\n        const condition = props.condition || false;\n        const positive = props.then || null;\n        const negative = props.else || null;\n\n        return condition ? positive : negative;\n    };\n\n    let errorMessage = () => {return <p>Test</p>}\n    let noerror = () => {return null};\n    return (\n        //Interactive Signup form, ask for one parameter at a time and then submit\n        <div className=\"SignUp\">\n            <div className=\"App-header\">\n            </div>\n            <div className=\"App-body\">\n                <div className=\"Input-Container\">\n                    \n                    <label>Name:</label>\n                    <input type={'text'} placeholder={'Enter your name'}\n                            onChange={(event) => setName(event.target.value)}/> \n                    <label>Email:</label>\n                    <input type={'text'} placeholder={'Enter your email'}\n                            onChange={(event) => setEmail(event.target.value)}/>\n                    <label>Username:</label>\n                    <input value={'a'} type={'text'} placeholder={'Enter your username'}\n                            onChange={(event) => setUsername(event.target.value)}/>\n                    {username == \"a\" ? <p>Username must be at least 2 characters</p> : null}\n                    <label>Password:</label>\n                    <input type={'password'} placeholder={'Enter your password'}\n                            onChange={(event) => setPassword(event.target.value)}/>\n                    <label>Confirm Password:</label>\n                    <input type={'password'} placeholder={'Enter your password'}\n                            onChange={(event) => setConfirmPassword(event.target.value)} onFocus={(event) => setBorderColor(event.target, true)} onBlur={(event) => setBorderColor(event.target, false)}/>\n                    <p id={'error'}> </p>\n                    <button onClick={handleSubmit}>Submit</button>  \n                </div>\n            </div>\n        </div>\n    );\n    \n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}